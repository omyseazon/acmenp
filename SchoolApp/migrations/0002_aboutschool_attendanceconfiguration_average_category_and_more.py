# Generated by Django 4.0.2 on 2022-07-26 19:40

import datetime
from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    dependencies = [
        ('SchoolApp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutSchool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Photo', models.ImageField(upload_to='images')),
                ('Title', models.CharField(max_length=50)),
                ('Subtitle', models.CharField(blank=True, max_length=50)),
                ('Mision', models.TextField(blank=True, max_length=200)),
                ('Vision', models.TextField(blank=True, max_length=200)),
                ('Description1', models.TextField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('InTime', models.TimeField(verbose_name='In Time ')),
                ('OutTime', models.TimeField(verbose_name='Out Time')),
                ('TotalHour', models.DecimalField(blank=True, decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Total Hour')),
            ],
        ),
        migrations.CreateModel(
            name='Average',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=200, unique=True)),
                ('Description', models.CharField(blank=True, default='', max_length=200)),
                ('MarksFrom', models.DecimalField(decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('MarksTo', models.DecimalField(decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(max_length=100)),
                ('Description1', models.TextField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DepartmentName', models.CharField(max_length=200, unique=True, verbose_name='Department ')),
            ],
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DesignationName', models.CharField(max_length=200, unique=True, verbose_name='Designation ')),
            ],
        ),
        migrations.CreateModel(
            name='DivisionGrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=200, unique=True)),
                ('Description', models.CharField(blank=True, default='', max_length=200)),
                ('MarksFrom', models.DecimalField(decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('MarksTo', models.DecimalField(decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('Point', models.PositiveIntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Examination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=200, unique=True)),
                ('StartDate', models.DateField(verbose_name='Start Date')),
                ('EndDate', models.DateField(verbose_name='End Date')),
                ('Semester', models.CharField(choices=[('1st Term', '1st Term'), ('2nd Term', '2nd Term')], max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Fee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AcademicYear', models.PositiveIntegerField(verbose_name='Academic Year')),
                ('Amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('Description', models.TextField(blank=True, default='', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='FeeCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('PendingAmount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('ReceiptNumber', models.CharField(blank=True, default='', max_length=200, verbose_name='Receipt Number')),
                ('PaymentDate', models.DateField(verbose_name='Payment Date')),
                ('Status', models.CharField(blank=True, choices=[('Cleared', 'Cleared'), ('Uncleared', 'Uncleared')], default='Uncleared', max_length=200)),
                ('PaymentDuration', models.CharField(blank=True, choices=[('Monthly', 'Monthly'), ('Quarterly', 'Quarterly'), ('Full', 'Full/Installment')], max_length=200)),
                ('AcademicYear', models.PositiveIntegerField(default=2022, verbose_name='Academic Year')),
            ],
        ),
        migrations.CreateModel(
            name='FeeDiscount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=200, unique=True)),
                ('Amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('Description', models.TextField(blank=True, default='', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='FeeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FrontPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Photo', models.ImageField(upload_to='images')),
                ('Title', models.CharField(max_length=50)),
                ('Description1', models.TextField(max_length=200)),
                ('PublishDate', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Photo', models.ImageField(upload_to='images/Events/Gallery/')),
            ],
        ),
        migrations.CreateModel(
            name='GPAGrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=200, unique=True)),
                ('Description', models.CharField(blank=True, default='', max_length=200)),
                ('MarksFrom', models.DecimalField(decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('MarksTo', models.DecimalField(decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('Point', models.PositiveIntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Photo', models.ImageField(upload_to='images')),
                ('Title', models.CharField(max_length=50)),
                ('Description1', models.TextField(max_length=200)),
                ('Description2', models.TextField(blank=True, max_length=200)),
                ('PublishDate', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ProductName', models.CharField(max_length=200, verbose_name='Product Name')),
                ('SystemCategory', models.CharField(blank=True, max_length=200, null=True, verbose_name='Category')),
                ('Stock', models.PositiveIntegerField(blank=True, default=0)),
                ('Size', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('SellingPrice', models.DecimalField(blank=True, decimal_places=2, max_digits=65, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Selling Price')),
                ('Color', models.CharField(blank=True, max_length=200, null=True, verbose_name='Color')),
                ('Status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Not Active', 'Not Active')], default='Active', max_length=200)),
                ('AgeOrClass', models.CharField(blank=True, max_length=200, null=True, verbose_name='Age Or Class')),
                ('Created', models.DateTimeField(auto_now_add=True, verbose_name='Created at ')),
            ],
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PurchaseType', models.CharField(choices=[('Cash', 'Cash'), ('Credit', 'Credit')], max_length=200, verbose_name='Purchase Type')),
                ('Amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('ReceiptNumber', models.CharField(max_length=200, verbose_name='Receipt Number')),
                ('PurchaseDate', models.DateField(verbose_name='Purchase Date ')),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Semester', models.CharField(blank=True, default='', max_length=200)),
                ('GPA', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('Average', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('AverageResult', models.CharField(blank=True, max_length=200)),
                ('Division', models.PositiveIntegerField(blank=True, default=0)),
                ('Point', models.PositiveIntegerField(blank=True, default=0)),
                ('ResultMode', models.CharField(choices=[('Average', 'Average'), ('Division', 'Division'), ('GPA', 'GPA')], max_length=200)),
                ('AcademicYear', models.PositiveIntegerField(blank=True, default=2022, verbose_name='Academic Year')),
                ('Status', models.CharField(blank=True, choices=[('Pass', 'Pass'), ('Fail', 'Fail')], max_length=200)),
                ('Date', models.DateField(blank=True, default=datetime.datetime(2022, 7, 26, 19, 40, 19, 944256, tzinfo=utc), verbose_name='End Date')),
                ('Examination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.examination')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RoleName', models.CharField(max_length=200, unique=True, verbose_name='Department ')),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SaleType', models.CharField(choices=[('Cash', 'Cash'), ('Credit', 'Credit')], max_length=200, verbose_name='Sale Type')),
                ('Amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('ReceiptNumber', models.CharField(max_length=200, verbose_name='Receipt Number')),
                ('SaleDate', models.DateField(verbose_name='Sale Date ')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FirstName', models.CharField(max_length=200)),
                ('MiddleName', models.CharField(max_length=200)),
                ('LastName', models.CharField(max_length=200)),
                ('Phone', models.CharField(max_length=20, unique=True)),
                ('Email', models.CharField(blank=True, max_length=200, unique=True, verbose_name='Email')),
                ('EmergencePhoneNumber', models.CharField(max_length=200, unique=True, verbose_name='Emergence Phone Number')),
                ('DateOfBirth', models.DateField(verbose_name='Date Of Birth')),
                ('JoiningDate', models.DateField(verbose_name='Joining Date')),
                ('Photo', models.ImageField(blank=True, upload_to='images/')),
                ('Gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=20)),
                ('MaritalStatus', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married')], max_length=20, verbose_name='Marital Status')),
                ('CurrentAddress', models.CharField(blank=True, max_length=200, verbose_name='Current Address')),
                ('PermanentAddress', models.CharField(max_length=200, verbose_name='Permanent Address')),
                ('Qualification', models.CharField(max_length=200, verbose_name='Qualification')),
                ('WorkExperience', models.CharField(max_length=200, verbose_name='Working Experience')),
                ('Note', models.CharField(blank=True, max_length=200, verbose_name='Note')),
                ('MedicalInsuranceNumber', models.CharField(max_length=200, unique=True, verbose_name='Medical Insurance Number')),
                ('DepartmentName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.department', verbose_name='Department ')),
                ('DesignationName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.designation', verbose_name='Designation')),
                ('Role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.role', verbose_name='Role ')),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=200, verbose_name='Supplier Name')),
                ('MobileNumber', models.CharField(max_length=200, verbose_name='Phone Number')),
                ('OpeningBalance', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=65, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('SellerName', models.CharField(max_length=200, verbose_name='Seller Name')),
                ('SellerPhone', models.CharField(max_length=200, verbose_name='Seller Phone')),
                ('EntryDate', models.DateTimeField(verbose_name='Entry Date')),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=200, unique=True, verbose_name='Unit Name')),
                ('Number', models.PositiveIntegerField(verbose_name='Unit Number')),
            ],
        ),
        migrations.RemoveField(
            model_name='registeredstudent',
            name='Hostel',
        ),
        migrations.RemoveField(
            model_name='registeredstudent',
            name='SearchKey',
        ),
        migrations.RemoveField(
            model_name='registeredstudent',
            name='Transport',
        ),
        migrations.AlterField(
            model_name='course',
            name='ClassName',
            field=models.CharField(max_length=200, unique=True, verbose_name='Class Level'),
        ),
        migrations.AlterField(
            model_name='course',
            name='ProgrammeId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.programme', verbose_name='Programme'),
        ),
        migrations.AlterField(
            model_name='driver',
            name='LicenceExpiryDate',
            field=models.DateField(verbose_name='Licence Expiry Date'),
        ),
        migrations.AlterField(
            model_name='driver',
            name='LicenceNumber',
            field=models.CharField(max_length=200, unique=True, verbose_name='Licence Number'),
        ),
        migrations.AlterField(
            model_name='driver',
            name='Mobile',
            field=models.CharField(max_length=200, unique=True, verbose_name='Mobile'),
        ),
        migrations.AlterField(
            model_name='hostel',
            name='Description',
            field=models.TextField(blank=True, max_length=200, verbose_name='Description '),
        ),
        migrations.AlterField(
            model_name='hostel',
            name='Intake',
            field=models.PositiveIntegerField(),
        ),
        migrations.AlterField(
            model_name='hostel',
            name='Name',
            field=models.CharField(max_length=200, unique=True, verbose_name='Hostel Name'),
        ),
        migrations.AlterField(
            model_name='hostel',
            name='Type',
            field=models.CharField(choices=[('Boys', 'Boys'), ('Girls', 'Girls'), ('Mixer', 'Mixer')], max_length=200, verbose_name='Hostel Type'),
        ),
        migrations.AlterField(
            model_name='hostelroom',
            name='AvailableCapacity',
            field=models.PositiveIntegerField(default=0, verbose_name='Available Capacity'),
        ),
        migrations.AlterField(
            model_name='hostelroom',
            name='Capacity',
            field=models.PositiveIntegerField(),
        ),
        migrations.AlterField(
            model_name='hostelroom',
            name='CostPerBed',
            field=models.DecimalField(decimal_places=2, max_digits=65, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Cost Per Bed'),
        ),
        migrations.AlterField(
            model_name='hostelroom',
            name='CurrentCapacity',
            field=models.PositiveIntegerField(default=0, verbose_name='Current Capacity'),
        ),
        migrations.AlterField(
            model_name='hostelroom',
            name='Description',
            field=models.TextField(blank=True, max_length=200, verbose_name='Description '),
        ),
        migrations.AlterField(
            model_name='hostelroom',
            name='NumberOfBed',
            field=models.PositiveIntegerField(verbose_name='Number Of Beds'),
        ),
        migrations.AlterField(
            model_name='hostelroom',
            name='RoomNumberOrName',
            field=models.CharField(max_length=200, unique=True, verbose_name='Room Number Or Name'),
        ),
        migrations.AlterField(
            model_name='hostelroom',
            name='RoomType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.roomtype', verbose_name='Room Type'),
        ),
        migrations.AlterField(
            model_name='parent',
            name='Student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.registeredstudent', verbose_name='Student'),
        ),
        migrations.AlterField(
            model_name='productcategory',
            name='Name',
            field=models.CharField(max_length=200, unique=True, verbose_name='Category Name'),
        ),
        migrations.AlterField(
            model_name='programme',
            name='Name',
            field=models.CharField(max_length=200, unique=True, verbose_name='Programe Name'),
        ),
        migrations.AlterField(
            model_name='registeredstudent',
            name='AdmissionNumber',
            field=models.CharField(blank=True, max_length=200, unique=True, verbose_name='Admission Number'),
        ),
        migrations.AlterField(
            model_name='registeredstudent',
            name='ClassName',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.course', verbose_name='Class'),
        ),
        migrations.AlterField(
            model_name='registeredstudent',
            name='Programme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.programme', verbose_name='Programme'),
        ),
        migrations.AlterField(
            model_name='registeredstudent',
            name='RegistrationNumber',
            field=models.CharField(blank=True, max_length=200, unique=True, verbose_name='Registration Number'),
        ),
        migrations.AlterField(
            model_name='registeredstudent',
            name='SchoolType',
            field=models.CharField(choices=[('Day', 'Day'), ('Boarding', 'Boarding')], max_length=20, verbose_name='School Type'),
        ),
        migrations.AlterField(
            model_name='relative',
            name='Student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.registeredstudent', verbose_name='Student'),
        ),
        migrations.AlterField(
            model_name='roomtype',
            name='Description',
            field=models.TextField(blank=True, max_length=200, verbose_name='Description '),
        ),
        migrations.AlterField(
            model_name='roomtype',
            name='RoomTitle',
            field=models.CharField(max_length=200, unique=True, verbose_name='Room Title'),
        ),
        migrations.AlterField(
            model_name='route',
            name='Fare',
            field=models.DecimalField(decimal_places=2, max_digits=65, validators=[django.core.validators.MinValueValidator(Decimal('0'))]),
        ),
        migrations.AlterField(
            model_name='route',
            name='RouteTitle',
            field=models.CharField(max_length=200, unique=True, verbose_name='Room Title'),
        ),
        migrations.AlterField(
            model_name='schooltype',
            name='TypeName',
            field=models.CharField(max_length=200, unique=True, verbose_name='Type Name'),
        ),
        migrations.AlterField(
            model_name='section',
            name='Name',
            field=models.CharField(max_length=200, unique=True, verbose_name='Section Name'),
        ),
        migrations.AlterField(
            model_name='section',
            name='TotalCapacity',
            field=models.PositiveIntegerField(),
        ),
        migrations.AlterField(
            model_name='studentadmission',
            name='AdmissionNumber',
            field=models.CharField(blank=True, max_length=200, unique=True, verbose_name='Admission Number'),
        ),
        migrations.AlterField(
            model_name='studentadmission',
            name='ClassName',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.course', verbose_name='Class'),
        ),
        migrations.AlterField(
            model_name='studentadmission',
            name='Programme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.programme', verbose_name='Programme'),
        ),
        migrations.AlterField(
            model_name='studentadmission',
            name='SchoolType',
            field=models.CharField(choices=[('Day', 'Day'), ('Boarding', 'Boarding')], max_length=20, verbose_name='School Type'),
        ),
        migrations.AlterField(
            model_name='subject',
            name='Name',
            field=models.CharField(default='', max_length=200, unique=True, verbose_name='Subject Name'),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='AvailableCapacity',
            field=models.PositiveIntegerField(default=0, verbose_name='Available Capacity'),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='Capacity',
            field=models.PositiveIntegerField(),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='CurrentCapacity',
            field=models.PositiveIntegerField(default=0, verbose_name='Current Capacity'),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='Note',
            field=models.CharField(blank=True, max_length=200, verbose_name='Note'),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='VehicleNumber',
            field=models.CharField(max_length=200, unique=True, verbose_name='Vehicle Number'),
        ),
        migrations.CreateModel(
            name='StudentEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SchoolType', models.CharField(choices=[('Day', 'Day'), ('Boarding', 'Boarding')], max_length=20, verbose_name='School Type')),
                ('AcademicYear', models.PositiveIntegerField(default='Academic Year')),
                ('Status', models.CharField(choices=[('Enrolled', 'Enrolled'), ('Not Enrolled', 'Not Enrolled')], default='Not Enrolled', max_length=500)),
                ('ClassName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.course', verbose_name='Class')),
                ('Hostel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.hostelroom', verbose_name='Hostel')),
                ('Programme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.programme', verbose_name='Programme')),
                ('RegisteredStudent', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.registeredstudent', verbose_name='Student')),
                ('Section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.section', verbose_name='Stream')),
                ('Transport', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.assignvehicle', verbose_name='Transport')),
            ],
        ),
        migrations.CreateModel(
            name='StaffAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('InTime', models.TimeField(verbose_name='In Time')),
                ('OutTime', models.TimeField(verbose_name='Out Time')),
                ('PermissionIn', models.TimeField(blank=True, default='00:00:00', verbose_name='Permission In')),
                ('PermissionOut', models.TimeField(blank=True, default='00:00:00', verbose_name='Permission Out')),
                ('TotalHour', models.DecimalField(blank=True, decimal_places=2, max_digits=4, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Total Hour')),
                ('OverTime', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=4, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Over Time')),
                ('LateSignIn', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=4, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Late Sign In')),
                ('EarlySignOut', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=4, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Early Sign Out')),
                ('Remarks', models.CharField(blank=True, max_length=200)),
                ('DayInfo', models.CharField(choices=[('Present', 'Present'), ('Absent', 'Absent')], max_length=200)),
                ('Staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.staff', verbose_name='Staff')),
            ],
        ),
        migrations.CreateModel(
            name='SaleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Quantity', models.PositiveIntegerField()),
                ('UnitPrice', models.DecimalField(blank=True, decimal_places=2, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Unit Price')),
                ('Amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('Product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.product', verbose_name='Product')),
                ('Sale', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.sale', verbose_name='Sale')),
            ],
        ),
        migrations.AddField(
            model_name='sale',
            name='Student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.registeredstudent', verbose_name='Student'),
        ),
        migrations.CreateModel(
            name='ResultSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Subject', models.CharField(max_length=200)),
                ('Grade', models.CharField(default='', max_length=200)),
                ('Marks', models.DecimalField(decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('Result', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.result')),
            ],
        ),
        migrations.AddField(
            model_name='result',
            name='Student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.registeredstudent'),
        ),
        migrations.CreateModel(
            name='Quarterly',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('QuarterOne', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('QuarterTwo', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('QuarterThree', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('QuarterFour', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('Amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('PendingAmount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('Discount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.feediscount')),
                ('Fee', models.ForeignKey(blank=True, default='', on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.fee', verbose_name='Fee')),
                ('FeeCollection', models.ForeignKey(blank=True, default='', on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.feecollection', verbose_name='Fee Collection')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Amount', models.DecimalField(blank=True, decimal_places=2, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('Quantity', models.PositiveIntegerField()),
                ('UnitPrice', models.DecimalField(blank=True, decimal_places=2, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Unit Price')),
                ('ExpiryDate', models.DateTimeField(verbose_name='Expiry Date')),
                ('AlertDate', models.DateTimeField(verbose_name='Alert Date')),
                ('Product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.product')),
                ('Purchase', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.purchase')),
            ],
        ),
        migrations.AddField(
            model_name='purchase',
            name='Supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.supplier', verbose_name='Supplier'),
        ),
        migrations.AddField(
            model_name='product',
            name='Category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.productcategory', verbose_name='Category'),
        ),
        migrations.AddField(
            model_name='product',
            name='Unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.unit', verbose_name='Unit'),
        ),
        migrations.CreateModel(
            name='Monthly',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('PendingAmount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('January', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('February', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('March', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('April', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('May', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('June', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('July', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('August', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('September', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('October', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('November', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('December', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('Discount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.feediscount', verbose_name='Discount')),
                ('Fee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.fee', verbose_name='Fee')),
                ('FeeCollection', models.ForeignKey(blank=True, default='', on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.feecollection', verbose_name='Fee Collection')),
            ],
        ),
        migrations.CreateModel(
            name='FeeCollectionDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PendingAmount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('Amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('Discount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.feediscount', verbose_name='Discount')),
                ('Fee', models.ForeignKey(blank=True, default='', on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.fee', verbose_name='Fee')),
                ('FeeCollection', models.ForeignKey(blank=True, default='', on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.feecollection', verbose_name='Fee Collection')),
            ],
        ),
        migrations.AddField(
            model_name='feecollection',
            name='Student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.registeredstudent', verbose_name='Student'),
        ),
        migrations.AddField(
            model_name='fee',
            name='Course',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.course', verbose_name='Class'),
        ),
        migrations.AddField(
            model_name='fee',
            name='FeeType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.feetype', verbose_name='Category'),
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Photo', models.ImageField(upload_to='images/Events/')),
                ('Title', models.CharField(max_length=50)),
                ('Description1', models.TextField(max_length=200)),
                ('Description2', models.TextField(blank=True, max_length=200)),
                ('PublishDate', models.DateTimeField(auto_now_add=True)),
                ('Category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolApp.category', verbose_name='Category')),
                ('Gallery', models.ManyToManyField(to='SchoolApp.Gallery')),
            ],
        ),
    ]
